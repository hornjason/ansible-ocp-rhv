---
# TODO: JTH: - query ovirt for matching VMs using facts
# don't rely on vars and inventory files
- name: Unregister VMs
  hosts: nodes:lb
  gather_facts: False
  tasks:
    - name: RHSM Unregister VMs
      redhat_subscription:
        state: absent
      register: task_result
      until: task_result is success
      retries: 10
      delay: 30
      ignore_errors: True

- name: oVirt infra destroy
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    env: "{{ lookup('env','ENV') }}"
  vars_files:
    - vars/{{ env }}/vars.yml
    - ../ocp-vars-{{ env }}.yml
  pre_tasks:
    - name: Log in to oVirt
      ovirt_auth:
        url: "{{ engine_url }}"
        username: "{{ engine_user }}"
        password: "{{ engine_password }}"
        ca_file: "{{ engine_cafile | default(omit) }}"
        insecure: "{{ engine_insecure | default(true) }}"

  tasks:
    - name: Erase vms
      ovirt_vms:
        auth: "{{ ovirt_auth }}"
        state: absent
        name: "{{ item.name }}"
      with_items:
        - "{{ vms }}"

    - name: ensure VMs are removed
      ovirt_vms_facts:
        auth: "{{ ovirt_auth }}"
        pattern: cluster={{ rhv_cluster }} and name=ocp*
      retries: 30
      delay: 10
      until: not ovirt_vms

    - name: ensure all disks are removed
      ovirt_disk_facts:
        auth: "{{ ovirt_auth }}"
        pattern: name=ocp* and storage.name={{ rhv_data_storage }}
      retries: 10
      delay: 10
      until: not ovirt_disks

  post_tasks:
    - name: Logout from oVirt
      ovirt_auth:
        state: absent
        ovirt_auth: "{{ ovirt_auth }}"

    - name: remove ansible hosts file
      file:
        state: absent
        path: inventory/hosts
