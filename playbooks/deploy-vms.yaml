---
- name: oVirt infra
  hosts: localhost
  #become: true
  connection: local
  gather_facts: false
  vars:
    env: "{{ lookup('env','ENV') }}"
  vars_files:
    - "../ocp-vars-{{ env }}.yml"
  pre_tasks:
    - name: Ensure dir for {{ env }}
      file:
        path: "{{ item }}/{{ env }}"
        state: directory
      loop: 
        - vars
        - inventory
     
    - name: template vm configs
      template:
        src: templates/vm_configs.j2
        dest: vars/{{ env }}/vm_config_vars.yml
      tags:
        - ca
        - template

    - include_vars: 'vars/{{ env }}/vm_config_vars.yml'
      tags:
        - ca
        - template

    - name: template ovirt infra
      template: 
        src: templates/ovirt-infra-vars.j2
        dest: vars/{{ env }}/vars.yml
      tags:
        - ca
        - template

    - include_vars:
        dir: "{{ playbook_dir}}/vars/{{ env }}/"
        #ignore_files: .keep
      tags:
        - ca
        - template

    - name: Template Openshift hosts files
      template:
        src: hosts.j2
        dest: "{{ playbook_dir }}/inventory/{{ env }}/hosts"
      run_once: true
      tags:
        - ca
        - template

    - local_action: meta
        refresh_inventory
      tags:
        - ca
        - template

    - name: "Establish rhv pre-req packages"
      set_fact:
        openshift_deploy_packages_by_provider: ['python-ovirt-engine-sdk4']

    # TODO Uncomment when out of testing. takes too long to run repeatedly
    #- name: "Be sure all pre-req rhv packages are installed"
    #  yum: name={{item}} state=installed
    #  with_items:
    #    - "{{ openshift_deploy_packages_by_provider }}"

    - name: copy dynamic inventory script to inventory dir
      copy:
        src: ovirt4.py
        dest: ./inventory/ovirt4.py
      tags:
        - ca
        - template

    - name: download ca.pem from RHV Manager
      get_url:
        url: 'http://{{ engine_hostname }}/ovirt-engine/services/pki-resource?resource=ca-certificate&format=X509-PEM-CA'
        dest: "{{ playbook_dir }}/files/ca.pem"
        force: yes
      register: ca_file
      tags:
        - ca
        - template

    - name: template dynamic inventory  ini (ovirt.init)
      template:
        src: ovirt.ini.j2
        dest: "./inventory/ovirt.ini"
      tags:
        - ca
        - template

    - name: Log in to oVirt
      ovirt_auth:
        url: "{{ engine_url }}"
        username: "{{ engine_user }}"
        password: "{{ engine_password }}"
        ca_file: "{{ engine_cafile | default(omit) }}"
        insecure: "{{ engine_insecure | default(true) }}"
      tags:
        - always
  roles:
#    - oVirt.image-template
    - oVirt.vm-infra

  post_tasks:
    - local_action: meta 
        refresh_inventory
   
    - name: Wait for Cloud-Init to finish
      wait_for:
        path: /etc/sysconfig/.finished
        sleep: 10
        #delay: 300
        timeout: 600
      delegate_to: "{{ item }}"
      loop:  "{{ groups['nodes'] }}" # TODO + groups['lb'] }}"
      register: task_result

    - name: Reboot immediately if there was a change.
      shell: "sleep 5 && reboot"
      async: 1
      poll: 0
      when: task_result is succeeded
      delegate_to: "{{ item }}"
      loop:  "{{ groups['nodes'] }}" # TODO+ groups['lb'] }}"
    
    - name: Wait for the reboot to complete if there was a change.
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 300
      when: task_result is succeeded
      delegate_to: "{{ item }}"
      loop:  "{{ groups['nodes'] }}" #`TODO groups['lb'] }}"
      
    # TODO: ANSIBLE 2.7 introduced
    #    - name: Reboot
    #      reboot
    #        test_command: whoami
    #      delegate_to: "{{ item }}"
    #      loop:  "{{ groups['nodes'] + groups['lb'] }}"

    - name: Logout from oVirt
      ovirt_auth:
        state: absent
        ovirt_auth: "{{ ovirt_auth }}"
      tags:
        - always


    #JTH: Fix for below

